{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nimport createDataContext from \"./createDataContext\";\n\nvar cartReducer = function cartReducer(state, action) {\n  switch (action.type) {\n    case 'add_item_cart':\n      return action.payload;\n\n    case 'fetch_cart_items':\n      return action.payload;\n\n    case 'update_items_cart':\n      return action.payload;\n\n    case 'empty_cart':\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n\nvar fetchCartItems = function fetchCartItems(dispatch) {\n  return function _callee() {\n    var email, key, value, totalPrice;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('email'));\n\n          case 3:\n            email = _context.sent;\n            key = email + '_books';\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(key));\n\n          case 7:\n            value = _context.sent;\n\n            if (value !== null) {\n              totalPrice = getTotalPrice(JSON.parse(value));\n              dispatch({\n                type: 'fetch_cart_items',\n                payload: {\n                  books: JSON.parse(value),\n                  totalPrice: totalPrice\n                }\n              });\n            } else {\n              dispatch({\n                type: 'fetch_cart_items',\n                payload: []\n              });\n            }\n\n            _context.next = 14;\n            break;\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 11]], Promise);\n  };\n};\n\nvar emptyCart = function emptyCart(dispatch) {\n  return function _callee2() {\n    var email, key;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('email'));\n\n          case 3:\n            email = _context2.sent;\n            key = email + '_books';\n            _context2.next = 7;\n            return _regeneratorRuntime.awrap(AsyncStorage.removeItem(key));\n\n          case 7:\n            dispatch({\n              type: 'empty_cart',\n              payload: []\n            });\n            _context2.next = 13;\n            break;\n\n          case 10:\n            _context2.prev = 10;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n\n          case 13:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 10]], Promise);\n  };\n};\n\nvar addItemToCart = function addItemToCart(dispatch) {\n  return function _callee3(book) {\n    var email, key, data, books, _books, isInTheCartCount;\n\n    return _regeneratorRuntime.async(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('email'));\n\n          case 2:\n            email = _context3.sent;\n            key = email + '_books';\n            _context3.prev = 4;\n            _context3.next = 7;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(key));\n\n          case 7:\n            data = _context3.sent;\n\n            if (!(data === null)) {\n              _context3.next = 15;\n              break;\n            }\n\n            books = [];\n            books.push(book);\n            AsyncStorage.setItem(key, JSON.stringify(books));\n            ToastAndroid.show(\"Carte adăugată cu success in coș!\", ToastAndroid.SHORT);\n            _context3.next = 27;\n            break;\n\n          case 15:\n            _books = JSON.parse(data);\n            isInTheCartCount = checkBookInTheCart(book, _books);\n\n            if (!(isInTheCartCount === 0)) {\n              _context3.next = 23;\n              break;\n            }\n\n            _books.push(book);\n\n            _context3.next = 21;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(key, JSON.stringify(_books)));\n\n          case 21:\n            _context3.next = 27;\n            break;\n\n          case 23:\n            _context3.next = 25;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(key, JSON.stringify(_books)));\n\n          case 25:\n            ToastAndroid.show(\"Carte adăugată cu success in coș!\", ToastAndroid.SHORT);\n            dispatch({\n              type: 'add_item_cart',\n              payload: _books\n            });\n\n          case 27:\n            _context3.next = 32;\n            break;\n\n          case 29:\n            _context3.prev = 29;\n            _context3.t0 = _context3[\"catch\"](4);\n            console.log(_context3.t0);\n\n          case 32:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[4, 29]], Promise);\n  };\n};\n\nvar checkBookInTheCart = function checkBookInTheCart(item, books) {\n  var count = 0;\n  books.forEach(function (e) {\n    if (e._id === item._id) {\n      e.quantity += item.quantity;\n      count += 1;\n      e.price = e.price + item.price;\n    }\n  });\n  return count;\n};\n\nvar updateItemsCart = function updateItemsCart(dispatch) {\n  return function _callee4(books) {\n    var email, key, data, totalPrice;\n    return _regeneratorRuntime.async(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('email'));\n\n          case 2:\n            email = _context4.sent;\n            key = email + '_books';\n            _context4.prev = 4;\n            _context4.next = 7;\n            return _regeneratorRuntime.awrap(AsyncStorage.removeItem(key));\n\n          case 7:\n            _context4.next = 9;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(key, JSON.stringify(books)));\n\n          case 9:\n            _context4.next = 11;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(key));\n\n          case 11:\n            data = _context4.sent;\n            totalPrice = getTotalPrice(JSON.parse(data));\n            dispatch({\n              type: 'update_items_cart',\n              payload: {\n                books: JSON.parse(data),\n                totalPrice: totalPrice\n              }\n            });\n            _context4.next = 19;\n            break;\n\n          case 16:\n            _context4.prev = 16;\n            _context4.t0 = _context4[\"catch\"](4);\n            console.log(_context4.t0);\n\n          case 19:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, [[4, 16]], Promise);\n  };\n};\n\nvar getTotalPrice = function getTotalPrice(books) {\n  var totalPrice = 0;\n  books.forEach(function (e) {\n    totalPrice += e.price;\n  });\n  return totalPrice;\n};\n\nvar _createDataContext = createDataContext(cartReducer, {\n  addItemToCart: addItemToCart,\n  fetchCartItems: fetchCartItems,\n  emptyCart: emptyCart,\n  updateItemsCart: updateItemsCart\n}, []),\n    Provider = _createDataContext.Provider,\n    Context = _createDataContext.Context;\n\nexport { Provider, Context };","map":{"version":3,"names":["AsyncStorage","createDataContext","cartReducer","state","action","type","payload","fetchCartItems","dispatch","getItem","email","key","value","totalPrice","getTotalPrice","JSON","parse","books","console","log","emptyCart","removeItem","addItemToCart","book","data","push","setItem","stringify","ToastAndroid","show","SHORT","isInTheCartCount","checkBookInTheCart","item","count","forEach","e","_id","quantity","price","updateItemsCart","Provider","Context"],"sources":["E:/PROGRAMMING/REACT_NATIVE/biblioteca/src/context/CartContext.js"],"sourcesContent":["import AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { ToastAndroid } from 'react-native';\r\nimport createDataContext from './createDataContext';\r\n\r\nconst cartReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'add_item_cart':\r\n            return action.payload\r\n        case 'fetch_cart_items':\r\n            return action.payload\r\n        case 'update_items_cart':\r\n            return action.payload\r\n        case 'empty_cart':\r\n            return action.payload\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst fetchCartItems = dispatch => async () => {\r\n    try {\r\n        const email = await AsyncStorage.getItem('email');\r\n        const key = email + '_books';\r\n        // console.log(\"fetchCartItemsKey:\", key)\r\n        const value = await AsyncStorage.getItem(key);\r\n        if (value !== null) {\r\n            const totalPrice = getTotalPrice(JSON.parse(value));\r\n            dispatch({ type: 'fetch_cart_items', payload: { books: JSON.parse(value), totalPrice } })\r\n        } else {\r\n            dispatch({ type: 'fetch_cart_items', payload: [] })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}\r\n\r\nconst emptyCart = dispatch => async () => {\r\n    try {\r\n        const email = await AsyncStorage.getItem('email');\r\n        const key = email + '_books';\r\n        await AsyncStorage.removeItem(key);\r\n        dispatch({ type: 'empty_cart', payload: [] })\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}\r\n\r\n// importData = async () => {\r\n//   try {\r\n\r\n//     const keys = await AsyncStorage.getAllKeys();\r\n//     const result = await AsyncStorage.multiGet(keys);\r\n//     console.log(result);\r\n//     await AsyncStorage.clear();\r\n//     // console.log(result);\r\n//   } catch (error) {\r\n//     console.error(error)\r\n//   }\r\n// }\r\n\r\nconst addItemToCart = (dispatch) => async (book) => {\r\n    const email = await AsyncStorage.getItem('email');\r\n    const key = email + '_books';\r\n    try {\r\n        const data = await AsyncStorage.getItem(key);\r\n        if (data === null) {\r\n            const books = [];\r\n            books.push(book);\r\n            AsyncStorage.setItem(key, JSON.stringify(books));\r\n            ToastAndroid.show(\"Carte adăugată cu success in coș!\", ToastAndroid.SHORT);\r\n        } else {\r\n            let books = JSON.parse(data);\r\n            let isInTheCartCount = checkBookInTheCart(book, books);\r\n            if (isInTheCartCount === 0) {\r\n                books.push(book);\r\n                await AsyncStorage.setItem(key, JSON.stringify(books));\r\n            } else {\r\n                await AsyncStorage.setItem(key, JSON.stringify(books));\r\n                ToastAndroid.show(\"Carte adăugată cu success in coș!\", ToastAndroid.SHORT);\r\n                dispatch({ type: 'add_item_cart', payload: books })\r\n            }\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}\r\n\r\nconst checkBookInTheCart = (item, books) => {\r\n    let count = 0;\r\n    books.forEach((e) => {\r\n        if (e._id === item._id) {\r\n            e.quantity += item.quantity;\r\n            count += 1;\r\n            e.price = e.price + item.price;\r\n        }\r\n    })\r\n    return count;\r\n}\r\n\r\n\r\nconst updateItemsCart = (dispatch) => async (books) => {\r\n    const email = await AsyncStorage.getItem('email');\r\n    const key = email + '_books';\r\n    try {\r\n        await AsyncStorage.removeItem(key);\r\n        await AsyncStorage.setItem(key, JSON.stringify(books));\r\n        const data = await AsyncStorage.getItem(key);\r\n        const totalPrice = getTotalPrice(JSON.parse(data));\r\n        dispatch({ type: 'update_items_cart', payload: { books: JSON.parse(data), totalPrice } })\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}\r\n\r\nconst getTotalPrice = (books) => {\r\n    let totalPrice = 0;\r\n    books.forEach((e) => {\r\n        totalPrice += e.price;\r\n    })\r\n    return totalPrice;\r\n}\r\n\r\nexport const { Provider, Context } = createDataContext(\r\n    cartReducer,\r\n    { addItemToCart, fetchCartItems, emptyCart, updateItemsCart },\r\n    []\r\n)"],"mappings":"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"},"metadata":{},"sourceType":"module"}
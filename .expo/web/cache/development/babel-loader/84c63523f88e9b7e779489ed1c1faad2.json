{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { useContext } from 'react';\nimport { StatusBar } from 'native-base';\nimport { COLORS } from \"./src/consts/colors\";\nimport { Context as AuthContext, Provider as AuthProvider } from \"./src/context/AuthContext\";\nimport { Provider as BooksProvider } from \"./src/context/BooksContext\";\nimport { Provider as CartProvider } from \"./src/context/CartContext\";\nimport AccountScreen from \"./src/screens/AccountScreen/AccountScreen\";\nimport BookDetailScreen from \"./src/screens/BookDetailScreen/BookDetailScreen\";\nimport BookListScreen from \"./src/screens/BookListScreen/BookListScreen\";\nimport CartScreen from \"./src/screens/CartScreen/CartScreen\";\nimport LoadingScreen from \"./src/screens/LoadingScreen/LoadingScreen\";\nimport SignInScreen from \"./src/screens/SignInScreen/SignInScreen\";\nimport SignUpScreen from \"./src/screens/SignUpScreen/SignUpScreen\";\nimport { useFonts } from 'expo-font';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar AuthStack = createStackNavigator();\n\nvar AuthStackScreen = function AuthStackScreen() {\n  return _jsxs(AuthStack.Navigator, {\n    screenOptions: {\n      header: function header() {\n        return null;\n      }\n    },\n    children: [_jsx(AuthStack.Screen, {\n      name: \"SignIn\",\n      component: SignInScreen\n    }), _jsx(AuthStack.Screen, {\n      name: \"SignUp\",\n      component: SignUpScreen\n    })]\n  });\n};\n\nvar AppStack = createStackNavigator();\n\nvar AppStackScreen = function AppStackScreen() {\n  return _jsxs(AppStack.Navigator, {\n    screenOptions: {\n      header: function header() {\n        return null;\n      }\n    },\n    children: [_jsx(AppStack.Screen, {\n      name: \"Biblioteca\",\n      component: BookListScreen\n    }), _jsx(AppStack.Screen, {\n      name: \"BookDetails\",\n      component: BookDetailScreen\n    }), _jsx(AppStack.Screen, {\n      name: \"AccountScreen\",\n      component: AccountScreen\n    }), _jsx(AppStack.Screen, {\n      name: \"CartScreen\",\n      component: CartScreen\n    })]\n  });\n};\n\nvar App = function App() {\n  var _useContext = useContext(AuthContext),\n      state = _useContext.state;\n\n  var _useFonts = useFonts({\n    AllerLight: require(\"./src/assets/fonts/AllerLight.ttf\")\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      loaded = _useFonts2[0];\n\n  if (!loaded) {\n    return null;\n  }\n\n  if (state.isLoading) {\n    return _jsx(LoadingScreen, {});\n  }\n\n  return _jsxs(NavigationContainer, {\n    children: [_jsx(StatusBar, {\n      barStyle: \"dark-content\",\n      backgroundColor: COLORS.dark\n    }), state.token === null ? _jsx(AuthStackScreen, {}) : _jsx(AppStackScreen, {})]\n  });\n};\n\nexport default (function () {\n  return _jsx(AuthProvider, {\n    children: _jsx(BooksProvider, {\n      children: _jsx(CartProvider, {\n        children: _jsx(App, {})\n      })\n    })\n  });\n});","map":{"version":3,"names":["NavigationContainer","createStackNavigator","useContext","StatusBar","COLORS","Context","AuthContext","Provider","AuthProvider","BooksProvider","CartProvider","AccountScreen","BookDetailScreen","BookListScreen","CartScreen","LoadingScreen","SignInScreen","SignUpScreen","useFonts","AuthStack","AuthStackScreen","header","AppStack","AppStackScreen","App","state","AllerLight","require","loaded","isLoading","dark","token"],"sources":["E:/PROGRAMMING/REACT_NATIVE/biblioteca/App.js"],"sourcesContent":["import { NavigationContainer } from '@react-navigation/native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { useContext } from 'react';\r\nimport { StatusBar } from 'native-base';\r\nimport { COLORS } from './src/consts/colors';\r\nimport { Context as AuthContext, Provider as AuthProvider } from './src/context/AuthContext';\r\nimport { Provider as BooksProvider } from './src/context/BooksContext';\r\nimport { Provider as CartProvider } from './src/context/CartContext';\r\nimport AccountScreen from './src/screens/AccountScreen/AccountScreen';\r\nimport BookDetailScreen from './src/screens/BookDetailScreen/BookDetailScreen';\r\nimport BookListScreen from './src/screens/BookListScreen/BookListScreen';\r\nimport CartScreen from './src/screens/CartScreen/CartScreen';\r\nimport LoadingScreen from './src/screens/LoadingScreen/LoadingScreen';\r\nimport SignInScreen from './src/screens/SignInScreen/SignInScreen';\r\nimport SignUpScreen from './src/screens/SignUpScreen/SignUpScreen';\r\nimport { useFonts } from 'expo-font';\r\nconst AuthStack = createStackNavigator();\r\n\r\nconst AuthStackScreen = () => (\r\n  <AuthStack.Navigator screenOptions={{ header: () => null }}>\r\n  <AuthStack.Screen name=\"SignIn\" component={SignInScreen} />\r\n  <AuthStack.Screen name=\"SignUp\" component={SignUpScreen} />\r\n  </AuthStack.Navigator>\r\n)\r\n\r\nconst AppStack = createStackNavigator();\r\n\r\nconst AppStackScreen = () => (\r\n  <AppStack.Navigator screenOptions={{ header: () => null }}>\r\n    <AppStack.Screen name=\"Biblioteca\" component={BookListScreen} />\r\n    <AppStack.Screen name=\"BookDetails\" component={BookDetailScreen} />\r\n    <AppStack.Screen name=\"AccountScreen\" component={AccountScreen} />\r\n    <AppStack.Screen name=\"CartScreen\" component={CartScreen} />\r\n  </AppStack.Navigator>\r\n)\r\n\r\nconst App = () => {\r\n  const { state } = useContext(AuthContext)\r\n  const [loaded] = useFonts({\r\n    AllerLight: require('./src/assets/fonts/AllerLight.ttf'),\r\n  });\r\n\r\n  if (!loaded) {\r\n    return null;\r\n  }\r\n\r\n  if (state.isLoading) {\r\n    return <LoadingScreen />\r\n  }\r\n\r\n  return (\r\n    <NavigationContainer>\r\n      <StatusBar barStyle='dark-content' backgroundColor={COLORS.dark} />\r\n      {state.token === null ? (\r\n        <AuthStackScreen />\r\n      ) : (\r\n        <AppStackScreen />\r\n      )\r\n      }\r\n    </NavigationContainer>\r\n  )\r\n}\r\n\r\nexport default () => (\r\n  <AuthProvider>\r\n    <BooksProvider>\r\n      <CartProvider>\r\n        <App />\r\n      </CartProvider>\r\n    </BooksProvider>\r\n  </AuthProvider>\r\n)"],"mappings":";AAAA,SAASA,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,MAAT;AACA,SAASC,OAAO,IAAIC,WAApB,EAAiCC,QAAQ,IAAIC,YAA7C;AACA,SAASD,QAAQ,IAAIE,aAArB;AACA,SAASF,QAAQ,IAAIG,YAArB;AACA,OAAOC,aAAP;AACA,OAAOC,gBAAP;AACA,OAAOC,cAAP;AACA,OAAOC,UAAP;AACA,OAAOC,aAAP;AACA,OAAOC,YAAP;AACA,OAAOC,YAAP;AACA,SAASC,QAAT,QAAyB,WAAzB;;;AACA,IAAMC,SAAS,GAAGlB,oBAAoB,EAAtC;;AAEA,IAAMmB,eAAe,GAAG,SAAlBA,eAAkB;EAAA,OACtB,MAAC,SAAD,CAAW,SAAX;IAAqB,aAAa,EAAE;MAAEC,MAAM,EAAE;QAAA,OAAM,IAAN;MAAA;IAAV,CAApC;IAAA,WACA,KAAC,SAAD,CAAW,MAAX;MAAkB,IAAI,EAAC,QAAvB;MAAgC,SAAS,EAAEL;IAA3C,EADA,EAEA,KAAC,SAAD,CAAW,MAAX;MAAkB,IAAI,EAAC,QAAvB;MAAgC,SAAS,EAAEC;IAA3C,EAFA;EAAA,EADsB;AAAA,CAAxB;;AAOA,IAAMK,QAAQ,GAAGrB,oBAAoB,EAArC;;AAEA,IAAMsB,cAAc,GAAG,SAAjBA,cAAiB;EAAA,OACrB,MAAC,QAAD,CAAU,SAAV;IAAoB,aAAa,EAAE;MAAEF,MAAM,EAAE;QAAA,OAAM,IAAN;MAAA;IAAV,CAAnC;IAAA,WACE,KAAC,QAAD,CAAU,MAAV;MAAiB,IAAI,EAAC,YAAtB;MAAmC,SAAS,EAAER;IAA9C,EADF,EAEE,KAAC,QAAD,CAAU,MAAV;MAAiB,IAAI,EAAC,aAAtB;MAAoC,SAAS,EAAED;IAA/C,EAFF,EAGE,KAAC,QAAD,CAAU,MAAV;MAAiB,IAAI,EAAC,eAAtB;MAAsC,SAAS,EAAED;IAAjD,EAHF,EAIE,KAAC,QAAD,CAAU,MAAV;MAAiB,IAAI,EAAC,YAAtB;MAAmC,SAAS,EAAEG;IAA9C,EAJF;EAAA,EADqB;AAAA,CAAvB;;AASA,IAAMU,GAAG,GAAG,SAANA,GAAM,GAAM;EAChB,kBAAkBtB,UAAU,CAACI,WAAD,CAA5B;EAAA,IAAQmB,KAAR,eAAQA,KAAR;;EACA,gBAAiBP,QAAQ,CAAC;IACxBQ,UAAU,EAAEC,OAAO;EADK,CAAD,CAAzB;EAAA;EAAA,IAAOC,MAAP;;EAIA,IAAI,CAACA,MAAL,EAAa;IACX,OAAO,IAAP;EACD;;EAED,IAAIH,KAAK,CAACI,SAAV,EAAqB;IACnB,OAAO,KAAC,aAAD,KAAP;EACD;;EAED,OACE,MAAC,mBAAD;IAAA,WACE,KAAC,SAAD;MAAW,QAAQ,EAAC,cAApB;MAAmC,eAAe,EAAEzB,MAAM,CAAC0B;IAA3D,EADF,EAEGL,KAAK,CAACM,KAAN,KAAgB,IAAhB,GACC,KAAC,eAAD,KADD,GAGC,KAAC,cAAD,KALJ;EAAA,EADF;AAWD,CAzBD;;AA2BA,gBAAe;EAAA,OACb,KAAC,YAAD;IAAA,UACE,KAAC,aAAD;MAAA,UACE,KAAC,YAAD;QAAA,UACE,KAAC,GAAD;MADF;IADF;EADF,EADa;AAAA,CAAf"},"metadata":{},"sourceType":"module"}